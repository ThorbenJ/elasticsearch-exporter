---

- name: "Get first page (1/{{ elex_page_count }})"
  uri:
    url: "{{ elex_elasticsearch_url }}/{{ elex_index_real }}/_search?scroll=2m"
    method: POST
    body_format: json
    body:
      sort:
      - "_doc"
      size: "{{ elex_page_size }}"
    headers:
      Accept: "application/json"
    url_username: "{{ elex_login[0] }}"
    url_password: "{{ elex_login[1] }}"
    force_basic_auth: true
    timeout: 300
  register: first_result
  when: elex_page_num==1
  tags:
  - export
  - docs

- name: Get scroll ID
  set_fact:
    elex_scroll_id: "{{ first_result.json._scroll_id }}"
  when: elex_scroll_id is not defined
  tags:
  - export
  - docs

- name: "Get next page ({{ elex_page_num }}/{{ elex_page_count }})"
  uri:
    url: "{{ elex_elasticsearch_url }}/_search/scroll"
    method: POST
    body_format: json
    body:
      scroll: "2m"
      scroll_id: "{{ elex_scroll_id }}"
    headers:
      Accept: "application/json"
    url_username: "{{ elex_login[0] }}"
    url_password: "{{ elex_login[1] }}"
    force_basic_auth: true
    timeout: 300
  register: next_result
  when: elex_page_num>1
  tags:
  - export
  - docs

- name: "Save page ({{ elex_page_num }}/{{ elex_page_count }})"
  template:
    dest: "{{ elex_datadir }}/[{{ elex_index_real }}]_docs{{ '%06x'|format(elex_page_num) }}.ndjson"
    src: "bulk_index.j2"
  vars:
    hits: "{{ ((elex_page_num==1)|ternary(first_result, next_result)).json.hits.hits|list }}"
  tags:
  - export
  - docs

- name: "Compress page ({{ elex_page_num }}/{{ elex_page_count }})"
  archive:
    path: "{{ elex_datadir }}/[{{ elex_index_real }}]_docs{{ '%06x'|format(elex_page_num) }}.ndjson"
    remove: yes
  tags:
  - compress
  - docs
